{"version":3,"sources":["Header.js","DropFile.js","Activity.js","App.js","serviceWorker.js","index.js"],"names":["Header","state","value","file","this","props","Bar","SearchBar","Search","disabled","onKeyDown","e","keyCode","search","target","onChange","preventDefault","setState","placeholder","Component","styled","div","input","DropFile","text","dragging","drop","React","createRef","handleDragIn","stopPropagation","dataTransfer","items","length","handleDragOut","handleDrag","handleDrop","files","read","clearData","current","addEventListener","removeEventListener","reading","error","DropContainer","ref","css","Activity","users","show","dates","dayView","today","activity","other","showInfo","user","d","acitivityToday","activity_periods","map","date","moment","start_time","tz","format","push","isSame","Date","startTime","endTime","end_time","getActivity","timezone","specificActivity","act","otherDate","prevProps","empty","undefined","Container","Grid","container","spacing","index","key","item","xs","sm","md","lg","xl","Card","variant","style","width","margin","CardContent","fontSize","real_name","id","CardActions","justifyContent","Button","color","onClick","float","Modal","open","onClose","maxWidth","padding","backgroundColor","marginTop","outline","borderRadius","minWidth","minHeight","tileClassName","view","find","x","defaultView","App","data","handleFile","type","indexOf","jsonData","reader","FileReader","that","event","JSON","parse","result","members","console","log","readAsText","name","allUsers","toLowerCase","includes","height","position","overflow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ecb738a9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components'\r\n\r\nclass Header extends Component {\r\n    state={value:''}\r\n    render() { \r\n        var file = this.props.file;\r\n        return (  \r\n            <Bar>\r\n                <SearchBar>\r\n                    <Search \r\n                        disabled={!file} \r\n                        value={this.state.value} \r\n                        onKeyDown={\r\n                            (e)=>{\r\n                                if(e.keyCode === 8 || e.keyCode === 46); \r\n                                    this.props.search(e.target.value);\r\n                            }\r\n                        }\r\n                        onChange={\r\n                            (e)=>{\r\n                                e.preventDefault(); \r\n                                this.setState({value:e.target.value}); \r\n                                this.props.search(e.target.value);\r\n                            }\r\n                        } \r\n                        placeholder={file?'Search by name, code or timezone.':'Drop a file to get started.'} \r\n                    />\r\n                </SearchBar>\r\n            </Bar>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Header;\r\n\r\nconst Bar = styled.div`\r\n    position:fixed;\r\n    height:4rem;\r\n    background-color:#1F2022;\r\n    width:100%;\r\n    display:flex;\r\n    align-items:center;\r\n`;\r\n\r\nconst SearchBar = styled.div`\r\n    width:50%;\r\n    min-width:280px;\r\n    margin:auto;\r\n`;\r\n\r\nconst Search = styled.input`\r\n    background:rgba(255,255,255,0.1);\r\n    border:1px solid grey;\r\n    padding:0.5rem 3%;\r\n    border-radius:0.5rem;\r\n    font-size:1.5rem;\r\n    width:92%;\r\n    color:white;\r\n\r\n    &:focus{ outline:none; }\r\n\r\n`;","import React, { Component } from 'react';\r\nimport styled, {css} from 'styled-components';\r\n\r\nclass DropFile extends Component {\r\n    state = { \r\n        text : 'Drop a .json file here.',\r\n        dragging : false\r\n    }\r\n\r\n    drop = React.createRef();\r\n    \r\n    componentDidMount() {\r\n        let drop = this.drop.current;\r\n        drop.addEventListener('dragenter', this.handleDragIn)\r\n        drop.addEventListener('dragleave', this.handleDragOut)\r\n        drop.addEventListener('dragover', this.handleDrag)\r\n        drop.addEventListener('drop', this.handleDrop)\r\n    }\r\n    handleDragIn = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n            this.setState({dragging: true, text:'Drop it right there!'})\r\n        }\r\n    }\r\n    handleDragOut = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.setState({dragging:false, text:'Drop a .json file here.'})\r\n\r\n    }\r\n    handleDrag = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n    handleDrop = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.setState({ dragging: false })\r\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n            this.props.read(e.dataTransfer.files[0]);\r\n            e.dataTransfer.clearData();\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        let drop = this.drop.current;\r\n        drop.removeEventListener('dragenter', this.handleDragIn)\r\n        drop.removeEventListener('dragleave', this.handleDragOut)\r\n        drop.removeEventListener('dragover', this.handleDrag)\r\n        drop.removeEventListener('drop', this.handleDrop)\r\n    }\r\n    render() { \r\n        var {text,dragging} = this.state;\r\n        var reading = this.props.reading;\r\n        if(this.props.error&&!dragging) text = this.props.error;\r\n        return (  \r\n            <DropContainer ref={this.drop} dragging={dragging} reading={reading}>\r\n                {!reading? text : 'Reading file . . .'}\r\n            </DropContainer>\r\n        );\r\n    }\r\n}\r\n \r\nexport default DropFile;\r\n\r\nconst DropContainer = styled.div`\r\n    margin-top:4rem;\r\n    height:-webkit-fill-available;\r\n    height:-moz-available;\r\n    width:80%;\r\n    background-color:none;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    color:white;\r\n    font-size:3rem;\r\n    transition:all 0.3s ease-in-out;\r\n    padding:10%;\r\n\r\n    ${props => props.dragging && css`\r\n        background-color:rgba(0,0,0,0.4);\r\n    `}\r\n    ${props => props.reading && css`\r\n        pointer-events:none;\r\n    `}\r\n`;","import React, { Component } from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport moment from 'moment-timezone';\r\nimport Calendar from 'react-calendar';\r\nimport './Calendar.css';\r\n\r\nclass Activity extends Component {\r\n    state = { \r\n        users : this.props.users,\r\n        current : null,\r\n        show : false,\r\n        dates:[],\r\n        dayView:true,\r\n        today:true,\r\n        activity:[],\r\n        other:false\r\n    }\r\n    showInfo = user => {\r\n        var dates=[], acitivityToday=[], d;\r\n        var activity = user.activity_periods;\r\n        activity.map(date=>{\r\n            d = moment(date.start_time, 'MMM D YYYY h:mma').tz(user.tz).format('D-M-YY');\r\n            dates.push(d);\r\n            if(moment(date.start_time, 'MMM D YYYY h:mma').tz(user.tz).isSame(new Date(),\"date\")){\r\n                var startTime = moment(date.start_time, 'MMM D YYYY h:mma').tz(user.tz).format('h:mm A');\r\n                var endTime = moment(date.end_time, 'MMM D YYYY h:mma').tz(user.tz).format('h:mm A');\r\n                acitivityToday.push(startTime + ' to ' + endTime)\r\n            }\r\n            return 1;\r\n        });\r\n        this.setState({show:true,current:user,dates:dates,activity:acitivityToday})\r\n    }\r\n    getActivity = (d) => {\r\n        var activity = this.state.current.activity_periods;\r\n        var timezone = this.state.current.tz;\r\n        var specificActivity = [];\r\n        var date = moment(d).format('D-M-YY');\r\n        activity.map(act => {\r\n            if(moment(act.start_time,'MMM D YYYY h:mma').tz(timezone).format('D-M-YY')===date){\r\n                var startTime = moment(act.start_time, 'MMM D YYYY h:mma').tz(timezone).format('h:mm A');\r\n                var endTime = moment(act.end_time, 'MMM D YYYY h:mma').tz(timezone).format('h:mm A');\r\n                specificActivity.push(startTime + ' to ' + endTime);\r\n            }\r\n            return 1;\r\n        })\r\n        this.setState({today:false,dayView:true,other:true,activity:specificActivity,otherDate:moment(d).format('D MMM YY')})\r\n    }  \r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.users!==this.props.users) this.setState({users:this.props.users});\r\n    }  \r\n    render() { \r\n        var {users,show,current,dates,dayView,today,activity,other,otherDate} = this.state;\r\n        var empty = false; \r\n        var modalStyle = {maxWidth:'85vw',margin:'auto',padding:'1rem 2rem 2rem 2rem',backgroundColor:'white',marginTop:'7rem',outline:'none',width:'max-content',borderRadius:'1rem',minWidth:'30rem',minHeight:'20rem'}\r\n        if(users === undefined || users.length===0) empty = true;\r\n        return (  \r\n            <Container empty={empty}>\r\n                {empty && <span>No users found.</span>}\r\n                {!empty &&\r\n                    <Grid container spacing={0}>\r\n                        {\r\n                            users.map((user,index)=>{\r\n                                return(\r\n                                    <Grid key={index} item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                                        <Card variant='elevation' style={{width:'90%',margin:'1rem auto'}} >\r\n                                            <CardContent>\r\n                                                <div style={{fontSize:'1.5rem'}}>{user.real_name}</div>\r\n                                                ID : {user.id}<br/>\r\n                                                Timezone : {user.tz}\r\n                                            </CardContent>\r\n                                            <CardActions style={{justifyContent:'flex-end'}}>\r\n                                                <Button color='primary' variant='contained' onClick={()=>{this.showInfo(user)}} style={{float:'right'}}>See activity</Button>\r\n                                            </CardActions>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                }\r\n                <Modal open={show} onClose={()=>{this.setState({show:false,dayView:true,today:true,other:false})}}>\r\n                    <div style={modalStyle}>\r\n                        {current &&\r\n                            <div>\r\n                                <h2>\r\n                                    {current.real_name}\r\n                                    <Button onClick={() => { this.setState({ dayView: true,show:false,today:true,other:false }) }} color='primary' variant='outlined' style={{ float: 'right'}}>\r\n                                        <CloseIcon  />\r\n                                    </Button>\r\n                                </h2>\r\n                                {dayView &&\r\n                                    <div>\r\n                                        <h3>\r\n                                            {today && 'Today'} \r\n                                            {other && <>{otherDate}</>}\r\n                                            <Button onClick={()=>{this.setState({dayView:false})}} color='primary' variant='outlined' style={{float:'right'}}>\r\n                                                All Activity\r\n                                            </Button>\r\n                                        </h3>\r\n                                        <div style={{marginTop:'-1rem',fontSize:'0.75rem'}}>All times are in local timezone.</div>\r\n                                        <hr/>\r\n                                        {activity.length===0?\r\n                                            \"No activity\":\r\n                                            <div>\r\n                                                {activity.map((act,index)=><div key={index}>{act}</div>)}\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                {!dayView &&\r\n                                    <div>\r\n                                        <h3>All activity</h3>\r\n                                        <Calendar\r\n                                            tileClassName={({ date, view }) => {\r\n                                                if (dates.find(x => x === moment(date).format('D-M-YY'))) {\r\n                                                    return 'date-highlight'\r\n                                                }\r\n                                            }}\r\n                                            defaultView='year'\r\n                                            onChange={(value,view)=>{this.getActivity(value)}}\r\n                                        />\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </Modal>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Activity;\r\n\r\nconst Container = styled.div`\r\n    width:100%;\r\n    margin-top:4rem;\r\n    height:-webkit-fill-available;\r\n    height:-moz-available;\r\n\r\n    ${props => props.empty && css`\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n        font-size:3rem;\r\n        color:white;\r\n    `}\r\n`;","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport DropFile from './DropFile';\r\nimport Activity from './Activity';\r\n\r\nclass App extends Component {\r\n    state = { \r\n        file : false, \r\n        reading : false,\r\n        error:false,\r\n        data:{},\r\n        users:[]\r\n    }\r\n    handleFile = file => {\r\n        this.setState({reading:true});\r\n        if(file.type && file.type.indexOf('json')===-1){\r\n            this.setState({error:'That file was not a json file. Try again. ;)',reading:false});\r\n            return;\r\n        }\r\n        var reader = new FileReader();\r\n        var jsonData, that = this ;\r\n        reader.addEventListener('load', (event) => {\r\n            try {\r\n                jsonData = JSON.parse(event.target.result);\r\n                that.setState({reading:false,file:true,data:jsonData,users:jsonData.members});\r\n            } catch (error) {\r\n                that.setState({error:'There appears to be a mistake in your json file. Please verify and try again.',reading:false});\r\n                console.log('More about the error : ');\r\n                console.log(error);\r\n            }\r\n        });\r\n        reader.readAsText(file);        \r\n    }\r\n    search = (text) => {\r\n        if(text===''){\r\n            this.setState({users:this.state.data.members})\r\n            return;\r\n        }\r\n        var allUsers = this.state.data.members;\r\n        var users = [];\r\n        text= text.toLowerCase()\r\n        var name, id, timezone;\r\n        allUsers.map((user)=>{\r\n            name = user.real_name.toLowerCase();\r\n            id = user.id.toLowerCase();\r\n            timezone = user.tz.toLowerCase();\r\n            if(name.includes(text))\r\n                users.push(user);                \r\n            else if(id.includes(text))\r\n                users.push(user);\r\n            else if(timezone.includes(text))\r\n                users.push(user)\r\n            return 1;\r\n        })\r\n        this.setState({users:users})\r\n    }\r\n    render() { \r\n        var {reading, file, error,users} = this.state;\r\n        return (  \r\n            <div style={{height:'100vh',width:'100vw',position:'absolute',overflow:'hidden'}}>\r\n                <Header file={file} search={this.search} />\r\n                {!file && <DropFile read={this.handleFile} reading={reading} error={error} />}\r\n                {file && <Activity users = {users} /> }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}